name: Build, Test, Containerize, and Deploy (Java â†’ ACA)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/ecommerce-app
  RG: Anas-LABSs
  ACA_APP: ecommerce-java-app-ih
  JAVA_VERSION: '21'
  PORT: '8080'

jobs:
  build-test:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.setver.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven

      - name: Set CI version (1.0.<run>)
        id: setver
        run: echo "version=1.0.${GITHUB_RUN_NUMBER}" >> "$GITHUB_OUTPUT"

      - name: Build & test with Maven
        run: mvn -B -DskipTests=false clean package

      - name: Find built JAR
        id: jar
        run: |
          JAR=$(ls -1 target/*.jar | head -n1)
          echo "jar=$JAR" >> "$GITHUB_OUTPUT"
          echo "Using $JAR"

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: ecommerce-app-${{ steps.setver.outputs.version }}
          path: ${{ steps.jar.outputs.jar }}
          retention-days: 14

  docker-deploy:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ needs.build-test.outputs.version }}
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
            ${{ env.DOCKER_IMAGE }}:latest

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}


      - name: Deploy to Azure Container Apps
        uses: azure/container-apps-deploy-action@v2
        with:
          resourceGroup: ${{ env.RG }}
          containerAppName: ${{ env.ACA_APP }}
          imageToDeploy: ${{ env.DOCKER_IMAGE }}:${{ needs.build-test.outputs.version }}
          # Only needed the first time if not set already:
          # targetPort: ${{ env.PORT }}
          # ingress: external
